package ru.rrusanov.Iterator;import org.junit.Before;import org.junit.Test;import java.util.Iterator;import static org.hamcrest.MatcherAssert.assertThat;import static org.hamcrest.Matchers.is;/** * @author Roman Rusanov * @version 0.1 * @since 19.03.2018 * * Class test MatrixIterator.java class with jagged array. */public class JaggedArrayIteratorTest {    /**     * Instance iterator.     */    private Iterator<Integer> it;    /**     * Before block execute before all test blocks.     */    @Before    public void setUp() {        it = new MatrixIterator(new int[][]{{1}, {3, 4}, {7}});    }    /**     * Test returned value with out hasNext invocation.     */    @Test    public void testsThatNextMethodDoesntDependsOnPriorHasNextInvocation() {        assertThat(it.next(), is(1));        assertThat(it.next(), is(3));        assertThat(it.next(), is(4));        assertThat(it.next(), is(7));    }    /**     * Test hasNext invocation doesn't affect retrieval order.     */    @Test    public void sequentialHasNextInvocationDoesntAffectRetrievalOrder() {        assertThat(it.hasNext(), is(true));        assertThat(it.hasNext(), is(true));        assertThat(it.next(), is(1));        assertThat(it.next(), is(3));        assertThat(it.next(), is(4));        assertThat(it.next(), is(7));    }    /**     * Test sequence invocation hasNext.     */    @Test    public void hasNextNextSequentialInvocation() {        assertThat(it.hasNext(), is(true));        assertThat(it.next(), is(1));        assertThat(it.hasNext(), is(true));        assertThat(it.next(), is(3));        assertThat(it.hasNext(), is(true));        assertThat(it.next(), is(4));        assertThat(it.hasNext(), is(true));        assertThat(it.next(), is(7));        assertThat(it.hasNext(), is(false));    }}