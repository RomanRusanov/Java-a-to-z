package ru.rrusanov.Iterator;import java.util.Iterator;import java.util.NoSuchElementException;/** * @author Roman Rusanov * @version 0.1 * @since 18.03.2018 * * MatrixIterator class define new iterator type for array interaction. */public class MatrixIterator implements Iterator<Integer> {    private final int[][] values;    private int indexOut;    private int indexIn;    public MatrixIterator(int[][] values) {        this.values = values;        this.indexOut = 0;        this.indexIn = 0;    }    @Override    public boolean hasNext() {        return !(indexOut == this.values.length -1 && indexIn == this.values[indexOut].length);    }    @Override    public Integer next() {        int result = 0;        if (!(this.values.length == 0) && this.hasNext()) {            if (indexIn >= this.values[indexOut].length) {                indexOut = ++indexOut;                indexIn = 0;            }            if (indexOut < this.values.length) {                result = this.values[this.indexOut][this.indexIn++];            }        } else {            new NoSuchElementException();        }        return result;    }}