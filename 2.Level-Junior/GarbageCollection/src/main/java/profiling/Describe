1.Используя различные утилиты для анализа памяти виртуальной машины провести
анализ работы программы из второго модуля. Программа заявок.

Java-a-to-z\2.Level-Junior\Chapter003_SQL_JDBC\src\main\java\ru\rrusanov\trackerSQL

2.Данные анализа описать в текстовом файле и добавить в репозиторий. В файле
нужно указать, каким инструментом проведен анализ и что по нему видно.

3.Попробовать добиться состояния выхода за пределы памяти и посмотреть
состояние виртуальной машины.

Для анализа использовался VisualVm launcher plugin for IDEA.
Приложение трекер было запущено с ключом
-Xmx5m чтобы ограничить минимальной памятью, только для запуска трекера.
-XX:+PrintCommandLineFlags Выяснить какой GC используется это (G1)
При анализе областей Young ожидаемо видно что изначально объекта помещаются
в Sur1 а после перетекают в oldGen. Поскольку хип виртуальной машины сильно
ограничен GC постоянно пытается собрать мусор высвободить место о чем
свидетельствует быстро растущий счетчик попыток сборок как в yong так и в old
областях(outOfMemory.png). Так-же при анализе был использован профилировщик
JDBC который показал sql запросы обращение к БД при попытке создать или прочитать
данные о заявке (sql.PNG, sql2.PNG) но при запуске профилировщика в ограниченном
режиме памяти вызвало нехватку хипа и падение out of memory.
(oldGen была заполнена полностью)

